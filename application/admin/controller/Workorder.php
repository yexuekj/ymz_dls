<?php

namespace app\admin\controller;

use app\common\exception\BaseException;
use app\common\mongo\MongoDb;
use app\model\AdminModel;
use app\model\HelpModel;
use app\model\UserModel;
use app\model\WorkOrderModel;
use think\App;
use think\Db;
use think\Exception;
use think\Request;

class Workorder extends Base
{
    public function __construct(Request $app)
    {
        parent::__construct($app);
        $this->model = WorkOrderModel::class;
    }


    public function queryWhere()
    {
        if($this->role_id == 2){
            $this->param[] = ['work_order.user_id','=' ,$this->uid];
        }
        if(!empty($this->param['user_name'])){
            $this->param[] = ['user.user_name','=',$this->param['user_name']];
        }
        return parent::queryWhere(); // TODO: Change the autogenerated stub
    }


    public function changestatus()
    {
        $param = $this->request->param();
        $where = [
            'id' => $param['id']
        ];
        $res = Db::table('work_order')->where($where)->update([
            'status' => 2,
            'updated_at' => time()
        ]);

        if($res){
            return $this->success();
        }else{
            return $this->error();
        }
    }

    public function beforeDel($param, $id)
    {
        $param['status'] = 3;
        return parent::beforeDel($param, $id); // TODO: Change the autogenerated stub
    }


    public function beforeAdd($param)
    {
        $param['user_id'] = $this->uid;
        $param['created_at'] = time();
        return parent::beforeAdd($param); // TODO: Change the autogenerated stub
    }


    public function beforeUpdate($param, $id)
    {
        $param['updated_at'] = time();
        return parent::beforeUpdate($param, $id); // TODO: Change the autogenerated stub
    }
}
