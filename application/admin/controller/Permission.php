<?php

namespace app\admin\controller;

use app\model\PermissionModel;
use think\Db;
use think\Request;

class Permission extends Base
{
    public function __construct(Request $app)
    {
        parent::__construct($app);
        $this->model = PermissionModel::class;
    }

    public function  index(){
        return parent::index();
    }

    public function afterIndexAjax($data)
    {
        return parent::afterIndexAjax($data); // TODO: Change the autogenerated stub
    }

    public function edit()
    {
        //二级菜单
        $info_two = Db::name('menu')->alias('m_1')->join('menu m_2','m_1.menu_id = m_2.id')->field('m_1.*')->where('m_1.menu_id !=0 and m_2.menu_id =0')->select();
        $this->assign('info_two',$info_two);


        $role_info = Db::name('role')->select();
        $this->assign('role_info',$role_info);
        return parent::edit(); // TODO: Change the autogenerated stub
    }

    public function  editData()
    {
        return parent::editData(); // TODO: Change the autogenerated stub
    }

   public function beforeAdd($data){
        $params = $data;
        $p_id =$params['p_id'];
        $params['menu_id'] = $p_id;
       return parent::beforeAdd($params); // TODO: Change the autogenerated stub
   }

    public function afterAdd($param, $id)
    {
        parent::afterAdd($param, $id); // TODO: Change the autogenerated stub
    }


    public function editDataBeforeAssign($data){
        return parent::editDataBeforeAssign($data);
    }

    public function queryWhere()
    {
        if(!empty($this->param['title'])){
            $this->param[] = ['per.title','like','%'.trim($this->param['title']).'%'];
        }
        return parent::queryWhere();
    }






}